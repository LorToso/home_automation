
add_to_list:
  alias: Add an item to a list
  fields:
    item:
      description: "Item"
      example: "kitchen"
    var_list:
      description: "Variable containign the list"
      example: "var.vacuum_queue"
  sequence:
    - service: var.set
      data:
        entity_id: "{{ var_list }}"
        value_template: |
          {% set a = (states(var_list).replace('"','').replace("'",'"'))|from_json %}
          {% set b = [item] %}
          "{{ a+b }}"

remove_from_list:
  alias: Remove an item from a list
  fields:
    item:
      description: "Item"
      example: "kitchen"
    var_list:
      description: "Variable containign the list"
      example: "var.vacuum_queue"
  sequence:
    - service: var.set
      data:
        entity_id: "{{ var_list }}"
        value_template: |
          {%- set rooms = states(var_list).replace('"','').replace("'",'"')|from_json %}
          {%- set filtered_rooms = rooms | select('ne', item) | list %}
          "{{filtered_rooms}}"

get_first_element_from_list:
  alias: Get first element from a list
  fields:
    var_list:
      description: "Variable containign the list"
      example: "var.vacuum_queue"
  variables:
    first_value: >
      {{ {'value': ((states(var_list).replace('"','').replace("'",'"'))|from_json)[0]} }}
  sequence:
  - stop: "returning first element"
    response_variable: first_value

is_list_empty:
  alias: Is list empty
  fields:
    var_list:
      description: "Variable containing the list"
      example: "var.vacuum_queue"
  variables:
    is_empty: >
      {{ (states(var_list).replace('"','').replace("'",'"') | from_json | length == 0) }}
  sequence:
  - stop: "returning whether the list is empty"
    response_variable: is_empty

empty_list:
  alias: Empty a list
  fields:
    var_list:
      description: "Variable containing the list"
      example: "var.vacuum_queue"
  sequence:
    - service: var.set
      data:
        entity_id: "{{var_list}}"
        value_template: >-
          "[]"