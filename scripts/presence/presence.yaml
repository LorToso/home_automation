start_presence_timer:
  alias: Start Presence Timer
  fields:
    entity:
      description: "Entity id of the timer to start"
      example: "timer.bar_presence"
  sequence:
    - service: timer.cancel
      target:
        entity_id: "{{ entity }}"
    - service: timer.start
      target:
        entity_id: "{{ entity }}"


turn_on_presence:
  alias: Turn Presence On
  fields:
    lock:
      name: Lock id
      description: "Lock id to check"
      example: "input_boolean.bar_presence_lock"
      required: true
      selector:
        entity:
          domain: input_boolean
    presence:
      name: Presence id
      description: "Presence id to set"
      example: "input_boolean.bar_presence"
      required: true
      selector:
        entity:
          domain: input_boolean
    timer:
      name: Timer id
      description: "Timer id to start"
      example: "timer.bar_presence"
      required: true
      selector:
        entity:
          domain: timer
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{ true if states(lock) == 'off' else false }}"
      sequence:
        - service: input_boolean.turn_on
          data_template:
            entity_id: '{{ presence }}'
        - service: script.start_presence_timer
          data_template:
            entity: '{{ timer }}'
  mode: single


turn_off_presence:
  fields:
    lock:
      description: "Lock id to check"
      example: "input_boolean.bar_presence_lock"
    presence:
      description: "Presence id to set"
      example: "input_boolean.bar_presence"
    timer:
      description: "Timer id to start"
      example: "timer.bar_presence"
  alias: Turn Presence Off
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{ true if states(lock) == 'off' else false }}"
      sequence:
        - service: input_boolean.turn_off
          data_template:
            entity_id: '{{ presence }}'
        - service: timer.cancel
          data_template:
            entity_id: '{{ timer }}'
  mode: single
