send_notification:
  alias: Send Notification
  fields:
    title:
      description: "Title"
      example: "Message title"
    message:
      description: "Message"
      example: "This is a test message"
    link:
      description: "Link"
      example: "/room-overview/bath-room-"
      default: ""
  sequence:
    - service: notify.lg_webos_tv_oled65c27la
      data_template:
        title: "{{ title }}"
        message: "{{ message }}"
    - service: notify.mobile_app_p30
      data_template:
        title: "{{ title }}"
        message: "{{ message }}"
        data:
          # Android URL
          clickAction: "{{ url }}"
    - service: notify.mobile_app_iphone_de_nina
      data_template:
        title: "{{ title }}"
        message: "{{ message }}"
        data:
          # iOS URL
          url: "{{ url }}"
  mode: single

send_maintenance_notification:
  alias: Send Maintenence Notification
  fields:
    title:
      description: "Title"
      example: "Message title"
    message:
      description: "Message"
      example: "This is a test message"
    link:
      description: "Link"
      example: "/room-overview/bath-room-"
      default: ""
  sequence:
    - service: notify.lg_webos_tv_oled65c27la
      data_template:
        title: "{{ title }}"
        message: "{{ message }}"
    - service: notify.mobile_app_p30
      data_template:
        title: "{{ title }}"
        message: "{{ message }}"
        data:
          # Android URL
          clickAction: "{{ url }}"
  mode: single

send_air_freshness_notification:
  alias: Send Air Freshness Notification
  fields:
    title:
      description: Title
      example: Message title
    message:
      description: Message
      example: This is a test message
    link:
      description: Link
      example: /room-overview/bath-room-
      default: ""
  sequence:
    - service: notify.lg_webos_tv_oled65c27la
      data_template:
        title: "{{ title }}"
        message: "{{ message }}"
    - if:
        - condition: zone
          entity_id: person.lorenzo
          zone: zone.home
      then:
        - service: notify.mobile_app_p30
          data_template:
            title: "{{ title }}"
            message: "{{ message }}"
            data:
              clickAction: "{{ url }}"
    - if:
        - condition: zone
          entity_id: person.nina
          zone: zone.home
      then:
        - service: notify.mobile_app_iphone_de_nina
          data_template:
            title: "{{ title }}"
            message: "{{ message }}"
            data:
              url: "{{ url }}"
  mode: single

send_daily_update_notification:
  alias: Send daily update notification
  sequence:
    - service: notify.telegram
      data:
        message: |
          **Daily update**
          **Air freshness:**
          {% if states("binary_sensor.is_all_air_fresh") == "on" %}
            All good! Great job!
          {% endif %}
          {% if states("binary_sensor.is_office_air_fresh") == "off" %}
            Office needs to be aired!
          {% endif %}
          {% if states("binary_sensor.is_bath_room_air_fresh") == "off" %}
            Bath Room needs to be aired!
          {% endif %}
          {% if states("binary_sensor.is_living_room_air_fresh") == "off" %}
            Living Room needs to be aired!
          {% endif %}
          {% if states("binary_sensor.is_bed_room_air_fresh") == "off" %}
            Bed Room needs to be aired!
          {% endif %}
          **Vacuum:**
          {% if states("binary_sensor.roborock_s7_water_shortage") == "on" %}
            Vacuum needs water
          {% endif %}
          {% if states("sensor.roborock_s7_dock_error") == "Error" %}
            Vacuum dust bin needs to be emptied.
          {% endif %}
          **Weather today:**
          "Weather:" {{ states("weather.home") }}
          "Temperature:" {{ state_attr("weather.home", "temperature") }}Â°C
          "Rain:" {{ state_attr("weather.home", "forecast")[0]["precipitation"] }} mm
          "Wind:"  {{ state_attr("weather.home", "wind_speed") }} km/h
  mode: single
